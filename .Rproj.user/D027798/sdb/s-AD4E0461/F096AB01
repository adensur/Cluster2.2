{
    "contents" : "init=function(N,sd=1){#generates N particles with x,y,z random coordinates\n  x=rnorm(N,sd=sd)\n  y=rnorm(N,sd=sd)\n  data.frame(x=x,y=y)\n}\nU=function(r){#scalar function. Returns potential energy of r-type object\n  N=dim(r)[1]\n  ind=1\n  for(i in 2:N){\n    ind[i]=N*(i-1)+i\n  }\n  frame=data.frame(id=\"0\",rx=r$x,ry=r$y)\n  x=merge(frame,frame,by=\"id\")\n  x=x[-ind,]\n  y=(x[,4]-x[,2])^2+(x[,5]-x[,3])^2\n  sum(y^(-3))/2+sum(r^2)\n}\nU3=function(r){\n  sum(mapply(function(xi,yi) {\n    sum(unlist(mapply(function(xk,yk) {\n      if(xi!=xk & yi!=yk){\n      ((xi-xk)^2+(yi-yk)^2)^(-3)\n      }\n    },r$x,r$y)))\n  },r$x,r$y))/2+sum(r$x^2)+sum(r$y^2)\n}#U rewritten as mapply(). It is not faster!\nU4=function(r){\n  N=dim(r)[1]\n  if(N>2){\n  sum(sapply(1:(N-1),function(i) {\n    sum(sapply((i+1):N,function(k){\n      ((r$x[i]-r$x[k])^2+(r$y[i]-r$y[k])^2)^(-3)\n    }))\n  }))+sum(r$x^2)+sum(r$y^2)\n  }\n  \n}#U rewritten as sapply(). It is not faster!\nU2=function(r){#scalar function. Returns potential energy of r-type object\n  N=dim(r)[1]\n  sum=0\n  for(i in 1:N){\n    sum1=0\n    if(i!=N){\n      for(j in (i+1):N){\n        sum1=sum1+sum((r[i,]-r[j,])^2)^(-3)\n      }\n    }\n    sum=sum+sum1+sum(r[i,]^2)\n  }\n  sum\n}#initial one\ngU=function(r){#returns gradient of r object in same, N*3, form\n  N=dim(r)[1]\n  frame=data.frame(x=0,y=0)\n  for(i in 1:N){\n    for(j in 1:2){\n      r2=r[-i,]\n      y=(r[i,j]-r2[,j])/(((r2[,1]-r[i,1])^2+(r2[,2]-r[i,2])^2)^4)\n      frame[i,j]=2*r[i,j]-6*sum(y)\n    }\n  }\n  frame\n}\ngU2=function(r){#returns gradient of r object in same, N*3, form\n  N=dim(r)[1]\n  frame=data.frame(x=0,y=0)\n  for(i in 1:N){\n    for(j in 1:2){\n      sum=0\n      for(k in 1:N){\n        if(k!=i){\n          sum=sum+(r[i,j]-r[k,j])/(sum((r[i,]-r[k,])^2)^4)\n        }\n      }\n      frame[i,j]=2*r[i,j]-6*sum\n    }\n  }\n  frame\n}#initial one\nreinit<-function(N=17){\n  readRDS(file=paste(\"data/\",N,\".RDS\",sep=\"\"))\n}\n#temperature function\ntemp<-function(r, sd=1){\n  N=dim(r)[1]\n  vx=rnorm(N,sd=sd)\n  vx=(vx-sum(vx)/length(vx))\n  vy=rnorm(N,sd=sd)\n  vy=(vy-sum(vy)/length(vy))\n  data.frame(x=r$x,y=r$y,vx=vx,vy=vy)\n}\nE<-function(r){\n  N=dim(r)[1]\n  U(r[,1:2])+sum(r$vx^2)+sum(r$vy^2)\n}\n\n#chechking deltaE ~ sd dependance:\nsd=seq(0,100,by=0.05)\nEs=sapply(sd,function(x) E(temp(r,x)))\nplot(sd,Es,type=\"l\")\n#gradient descent cycle\n\nfor(n in 1:40){\nl=0.5         #lambda\nK=100000     #number of grad descent steps\nN=n      #number of particles\nr=init(N)\nfor(k in 1:K){\n  gu=gU(r)\n  if(U(r-l*gu)<U(r)){\n    r=r-l*gu\n    l=0.5\n  }else{\n    l=l/5\n  }\n  #print(c(k,U(r),l))\n}\nfilenum=paste(\"data/\",N,\".RDS\",sep=\"\")\nsaveRDS(r,filenum)\nprint(n)\n}\n\n\n\n",
    "created" : 1426026870825.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "0|22|4|0|\n26|15|36|0|\n37|15|50|0|\n51|15|62|0|\n63|16|78|0|\n79|23|81|0|\n83|24|90|0|\n",
    "hash" : "3830028646",
    "id" : "F096AB01",
    "lastKnownWriteTime" : 1427737850,
    "path" : "C:/Repos/Cluster2.2/1. Equilibrium state suche.R",
    "project_path" : "1. Equilibrium state suche.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}